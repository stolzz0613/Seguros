{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContendorHeader","styled","header","TextoHeader","h1","Header","titulo","primeraMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","setResumen","setCargando","useState","marca","year","plan","datos","setDatos","error","setError","obternetInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ae2a4f65.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from \"@emotion/styled\";\n\nconst ContendorHeader = styled.header`\n    background-color: #26C6DA;\n    padding:10px;\n    font-weight:bold;\n    color:#FFFFFF;\n`;\n\nconst TextoHeader = styled.h1`\n    font-size:2rem;\n    margin:0;\n    font-family:'Slabo 27px', serif;\n    text-align: center;\n`;\n\nconst Header = ({ titulo }) => {\n    return (\n        <ContendorHeader>\n            <TextoHeader>{titulo}</TextoHeader>\n        </ContendorHeader>\n    );\n}\n\nHeader.propTypes = {\n    titulo: PropTypes.string.isRequired\n}\n\nexport default Header;","\nexport function obtenerDiferenciaYear(year) {\n    return new Date().getFullYear() - year;\n}\n\n\nexport function calcularMarca(marca) {\n    let incremento;\n    switch (marca) {\n        case 'europeo':\n            incremento = 1.30;\n            break;\n        case 'americano':\n            incremento = 1.15;\n            break;\n        case 'asiatico':\n            incremento = 1.05;\n            break;\n        default:\n            break;\n    }\n\n    return incremento;\n}\n\nexport function obtenerPlan(plan) {\n    return (plan === \"basico\") ? 1.20 : 1.50;\n}\n\nexport function primeraMayuscula(texto) {\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\n}\n","import React, { useState } from 'react';\nimport styled from \"@emotion/styled\";\nimport PropTypes from \"prop-types\";\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from \"../helper\";\n\nconst Campo = styled.div`\n  display:flex;\n  margin-bottom:1rem;\n  align-items:center;\n`;\n\nconst Label = styled.label`\n    flex:0 0 100px; \n`;\n\nconst Select = styled.select`\n  display: block;\n  width: 100%;\n  padding: 1rem ;\n  border: 1px solid #e1e1e1;\n  -webkit-appearance: none;\n`;\n\nconst InputRadio = styled.input`\n  margin: 0 1rem;\n`;\n\nconst Boton = styled.button`\n  background-color: #00838F;\n  font-size:16px;\n  width:100%;\n  padding: 1rem;\n  color: #fff;\n  text-transform:uppercase;\n  font-weight:bold;\n  border:none;\n  transition: background-color .3s ease;\n  margin-top:2rem;\n\n  &:hover{\n    background-color: #26C6DA;\n    cursor: pointer;\n  }\n`;\n\nconst Error = styled.div`\n  background-color: red;\n  color: white;\n  padding: 1rem;\n  width: 100%;\n  text-align:center;\n  margin-bottom:2rem;\n`;\n\nconst Formulario = ({ setResumen, setCargando }) => {\n\n    const [datos, setDatos] = useState({\n        marca: \"\",\n        year: \"\",\n        plan: \"\"\n    });\n\n    const [error, setError] = useState(false);\n\n    const { marca, year, plan } = datos;\n\n    const obternetInformacion = e => {\n        setDatos({\n            ...datos,\n            [e.target.name]: e.target.value\n        })\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (marca.trim() === \"\" ||\n            year.trim() === \"\" ||\n            plan.trim() === \"\") {\n            setError(true);\n            return;\n        }\n        setError(false);\n\n\n        let resultado = 2000;\n\n        const diferencia = obtenerDiferenciaYear(year);\n        resultado -= ((diferencia * 3) * resultado) / 100;\n\n        resultado = calcularMarca(marca) * resultado;\n\n        const incrementoPlan = obtenerPlan(plan);\n        resultado = parseFloat(resultado * incrementoPlan).toFixed(2);\n\n        setCargando(true);\n\n        setTimeout(() => {\n            setCargando(false);\n            setResumen({\n                cotizacion: Number(resultado),\n                datos\n            });\n        }, 3000)\n\n\n    }\n\n\n    return (\n        <form\n            onSubmit={handleSubmit}\n        >\n            {\n                error\n                    ? <Error>Todos los campos son obligatorios</Error>\n                    : null\n            }\n            <Campo>\n                <Label>Marca</Label>\n                <Select\n                    name=\"marca\"\n                    value={marca}\n                    onChange={obternetInformacion}\n                >\n                    <option value=\"\">--Selecciones--</option>\n                    <option value=\"americano\">Americano</option>\n                    <option value=\"europeo\">Europeo</option>\n                    <option value=\"asiatico\">Asiatico</option>\n                </Select>\n            </Campo>\n\n            <Campo>\n                <Label>AÃ±o</Label>\n                <Select\n                    name=\"year\"\n                    value={year}\n                    onChange={obternetInformacion}\n                >\n                    <option value=\"\">-- Seleccione --</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                    <option value=\"2018\">2018</option>\n                    <option value=\"2017\">2017</option>\n                    <option value=\"2016\">2016</option>\n                    <option value=\"2015\">2015</option>\n                    <option value=\"2014\">2014</option>\n                    <option value=\"2013\">2013</option>\n                    <option value=\"2012\">2012</option>\n                </Select>\n            </Campo>\n            <Campo>\n                <Label>Plan</Label>\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"basico\"\n                    checked={plan === \"basico\"}\n                    onChange={obternetInformacion}\n                />BÃ¡sico\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"completo\"\n                    checked={plan === \"completo\"}\n                    onChange={obternetInformacion}\n                />Completo\n            </Campo>\n            <Boton type=\"submit\">Cotizar</Boton>\n        </form>\n    );\n}\n\nFormulario.propTypes = {\n    setResumen: PropTypes.func.isRequired,\n    setCargando: PropTypes.func.isRequired\n}\n\nexport default Formulario;","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport PropTypes from \"prop-types\";\nimport { primeraMayuscula } from \"../helper\";\n\nconst ContenedorResumen = styled.div`\n  padding:1rem;\n  text-align:center;\n  background-color:#00838F;\n  color:#FFF;\n  margin-top:1rem;\n`;\n\nconst Resumen = ({ datos }) => {\n\n    const { marca, year, plan } = datos;\n    if (marca === \"\" || year === \"\" || plan === \"\") {\n        return null;\n    }\n\n    return (\n        <ContenedorResumen>\n            <h2>RESUMEN COTIZACIÃN</h2>\n            <ul>\n                <li>Marca: {primeraMayuscula(marca)}</li>\n                <li>Plan: {primeraMayuscula(plan)}</li>\n                <li>AÃ±o del Auto:{year} </li>\n            </ul>\n        </ContenedorResumen>\n    );\n}\n\nResumen.propTypes = {\n    datos: PropTypes.object.isRequired\n}\n\nexport default Resumen;","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport PropTypes from \"prop-types\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst Mensaje = styled.p`\n  background-color: rgb(127,224,237);\n  margin-top:2rem; \n  padding:1rem;\n  text-align:center;\n`;\nconst ResultadoCotizacion = styled.div`\n    text-align:center;\n    padding:.5rem;\n    border:1px solid #26C6DA;\n    background-color: rgb(127,224,237);\n    margin-top: 1rem;\n    position:relative;\n`;\nconst TextoCotizacion = styled.p`\n    color: #00838F;\n    padding: 1rem;\n    text-transform: uppercase;\n    font-weight:bold;\n    margin:0;\n`;\n\nconst Resultado = ({ cotizacion }) => {\n    return (\n        (cotizacion === 0)\n            ? <Mensaje>Elige marca, aÃ±o y tipo de seguro</Mensaje>\n            : (\n                <ResultadoCotizacion>\n                    <TransitionGroup\n                        component=\"span\"\n                        className=\"resultado\"\n                    >\n                        <CSSTransition\n                            classNames=\"resultado\"\n                            key={cotizacion}\n                            timeout={{ enter: 500, exit: 500 }}\n                        >\n                            <TextoCotizacion>EL TOTAL ES: $ <span>{cotizacion}</span></TextoCotizacion>\n                        </CSSTransition>\n                    </TransitionGroup>\n                </ResultadoCotizacion>\n            )\n    )\n}\n\nResultado.propTypes = {\n    cotizacion: PropTypes.number.isRequired\n}\n\nexport default Resultado;","import React from 'react';\nimport './Spinner.css'\n\nconst Spinner = () => {\n    return (\n        <div className=\"spinner\">\n            <div className=\"dot1\"></div>\n            <div className=\"dot2\"></div>\n        </div>\n    );\n}\n\nexport default Spinner;","import React, { useState } from 'react';\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport Spinner from \"./components/Spinner\";\nimport styled from \"@emotion/styled\";\n\nconst Contenedor = styled.div`\n  max-width:600px;\n  margin:0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFF;\n  padding:3rem;\n`;\n\nfunction App() {\n\n  const [resumen, setResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [cargando, setCargando] = useState(false);\n  const { cotizacion, datos } = resumen;\n\n  return (\n    <Contenedor>\n      <Header\n        titulo=\"Cotizador de Seguros\"\n      />\n      <ContenedorFormulario>\n        <Formulario\n          setResumen={setResumen}\n          setCargando={setCargando}\n        />\n        {cargando ? <Spinner /> : null}\n        <Resumen\n          datos={datos}\n        />\n        {!cargando ?\n          <Resultado\n            cotizacion={cotizacion}\n          /> : null}\n      </ContenedorFormulario>\n    </Contenedor>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}